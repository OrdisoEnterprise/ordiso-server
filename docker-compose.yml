x-superset-image: &superset-image apachesuperset.docker.scarf.sh/apache/superset:${TAG:-latest}
x-superset-depends-on: &superset-depends-on
  # - db
  - ordiso_db_postgres
  - redis
x-superset-volumes:
  &superset-volumes # /app/pythonpath_docker will be appended to the PYTHONPATH in the final container
  - ./docker/superset:/app/docker
  - ./data/volumes/ordiso-superset-data/app/superset_home:/app/superset_home

version: '3.1'

services:

  ordiso-homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: ordiso-homepage
    restart: unless-stopped
    ports:
      - 3000:3000
    volumes:
      - ./data/volumes/ordiso-homepage:/app/config # Make sure your local config directory exists
      - /var/run/docker.sock:/var/run/docker.sock # (optional) For docker integrations
    extra_hosts:
      - "host.docker.internal:host-gateway"

  redis:
    image: redis:7
    container_name: superset_cache
    restart: unless-stopped
    volumes:
      - redis:/data
    extra_hosts:
      - "host.docker.internal:host-gateway"


  ordiso_nginx_manager:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    container_name: ordiso_nginx_manager
    ports:
      - '80:80'
      # - '443:443' # Public HTTPS Port
      - '81:81'
      - '33040:33040'
    volumes:
      - ./data/volumes/ordiso-nginx-manager-data/data:/data
      - ./data/volumes/ordiso-nginx-manager-data/letsencrypt:/etc/letsencrypt
    extra_hosts:
      - "host.docker.internal:host-gateway"


  ordiso_adminer:
    image: adminer
    restart: always
    container_name: ordiso_adminer
    ports:
      - 7070:8080
    extra_hosts:
      - "host.docker.internal:host-gateway"


  ordiso_docs:
    image: ubuntu:latest
    container_name: ordiso_docs
    restart: always
    environment:
      DOCUMENTATION_ROOT_DIR: "/docs"
    ports:
        - 90:9000
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
        - ./docs:/docs
        - ./tools:/tools
    command: bash -c "cd /tools && ./docs-server.sh"


  ordiso_db_mysql:
    image: mysql:8.0
    container_name: ordiso_db_mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ordiso
      MYSQL_USER: ordiso
      MYSQL_PASSWORD: ordiso
      MYSQL_ROOT_HOST: "%"
    ports:
      - "33050:3306"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./tmp/backups/ordiso.db:/docker-entrypoint-initdb.d
      - ./data/volumes/ordiso-db-mysql-data/var/lib/mysql:/var/lib/mysql
      

  ordiso_db_postgres:
    image: postgres:14
    container_name: ordiso_db_postgres
    restart: always
    environment:
      # POSTGRES_USER: superset
      POSTGRES_PASSWORD: superset
    ports:
      - "127.0.0.1:54320:5432"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./tmp/backups/ordiso.superset:/docker-entrypoint-initdb.d
      - ./data/volumes/ordiso-db-postgres-data/var/lib/postgresql:/var/lib/postgresql

  # ordiso_backuper:
  #   image: ubuntu:latest
  #   container_name: ordiso_backuper
  #   restart: always
  #   extra_hosts:
  #     - "host.docker.internal:host-gateway"
  #   volumes:
  #     - ./tmp/backups:/backups
  #     - ./tools:/tools
  #   command: bash -c "cd /tools && ./backuper.sh"

  ordiso_pypi_server:
    image: pypiserver/pypiserver:latest
    container_name: ordiso_pypi_server
    ports:
      - 8087:8080
    volumes:
      - ./data/volumes/ordiso-pypi-server-data/data/packages:/data/packages
    command: -P . -a . /data/packages
    restart: always


  ordiso_superset:
    env_file: docker/superset/.env
    image: *superset-image
    container_name: ordiso_superset_app
    command: ["/app/docker/docker-bootstrap.sh", "app-gunicorn"]
    user: "root"
    restart: unless-stopped
    ports:
      - 8088:8088
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on: *superset-depends-on
    volumes: *superset-volumes


  superset-init:
    image: *superset-image
    container_name: superset_init
    command: ["/app/docker/docker-init.sh"]
    env_file: docker/superset/.env
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    healthcheck:
      disable: true


  superset-worker:
    image: *superset-image
    container_name: superset_worker
    command: ["/app/docker/docker-bootstrap.sh", "worker"]
    env_file: docker/superset/.env
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "celery -A superset.tasks.celery_app:app inspect ping -d celery@$$HOSTNAME",
        ]


  superset-worker-beat:
    image: *superset-image
    container_name: superset_worker_beat
    command: ["/app/docker/docker-bootstrap.sh", "beat"]
    env_file: docker/superset/.env
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    healthcheck:
      disable: true

  ordiso-dockerproxy:
    image: ghcr.io/tecnativa/docker-socket-proxy:latest
    container_name: ordiso-dockerproxy
    environment:
      - CONTAINERS=1 # Allow access to viewing containers
      - SERVICES=1 # Allow access to viewing services (necessary when using Docker Swarm)
      - TASKS=1 # Allow access to viewing tasks (necessary when using Docker Swarm)
      - POST=0 # Disallow any POST operations (effectively read-only)
    ports:
      - 127.0.0.1:2375:2375
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Mounted as read-only
    restart: unless-stopped

  ordiso-dockge:
    image: louislam/dockge:1.3.3
    container_name: ordiso-dockge
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/volumes/ordiso-dockge-data:/app/data
      - /opt/stacks:/opt/stacks
    environment:
      - DOCKGE_STACKS_DIR=/opt/stacks
    ports:
      - 5001:5001
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped

volumes:
  ordiso-mysql-data:
    name: ordiso-mysql-data
  superset_home:
    external: false
  db_home:
    external: false
  redis:
    external: false
  pypi-server:
    external: false
